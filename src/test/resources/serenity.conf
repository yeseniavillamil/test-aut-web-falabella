# Archivo configuracion base de Serenity, escrito en Typesafe (Config-File) con HOCON

# Ubicacion en disco del proyecto de automatizacion
pathRootProject = "${user.dir}"
# Estructura de ruta relativa del paquete base
urlBasePackageProject = "${build.gradle.project.package.base.url}"
# Estructura de paqueteria relativa del paquete base
basePackageProject = "${gradle.props.project.package.base}"
# Relativo al paquete de recursos de test
urlTestResourcePackageProject = "${gradle.props.project.package.resource.test.url}"

# Ubicacion de las apps disponibles en local, sujetas a prueba
pathEnvironments = "#{pathRootProject}/#{urlTestResourcePackageProject}/#{urlBasePackageProject}/environments"

# Ambiente por defecto en caso de no recibirse el argumento -Denvironment=
  # Selecciona el ambiente local, del propietario/usuario de la maquina
#environment = "${user.name}.local"
environment = "yesenia.villamil.web.local"

# Administracion de ambientes
environments {

  include "co/com/falabella/test/automation/web/environments/testers/yesenia_local.conf"
  include "co/com/falabella/test/automation/web/environments/testers/pipeline.conf"
}

# Caracteristicas del reporte
enable.markdown="story,narrative,scenario,step"

# Caracteristicas de los feature
feature {
    file.language = es
    file.encoding = utf8
}

# Caracteristicas de Serenity
serenity {
    # FOR_EACH_ACTION: guarda una captura de pantalla por cada acción del elemento
    # BEFORE_AND_AFTER_EACH_STEP: guarda una captura de pantalla antes y después de cada paso
    # AFTER_EACH_STEP: guarda una captura de pantalla después de cada paso
    # FOR_FAILURES: guarda capturas de pantalla solo para los pasos fallidos. Esto puede ahorrar espacio en disco y acelerar un poco las pruebas
    take.screenshots = AFTER_EACH_STEP

    extension.packages = "#{basePackageProject}.setups.hooks"
    ext.packages = "#{basePackageProject}.setups.hooks"

    # Nivel de registro de trazas
    logging = VERBOSE

    #timeout = 10000

    # Esperas implicitas (milisegundos)
    #timeouts.implicitlywait = 5000

    # codificacion en la generacion del reporte
    report.encoding = utf8

    # Nombre del proyecto de automatizacion que saldra en el reporte
    project.name = "Automatización de Pruebas E2E - Falabella"
}
